// Mocks generated by Mockito 5.4.4 from annotations
// in opentripapp/test/trip_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:opentripapp/features/trip/data/dto/trip_dto.dart' as _i4;
import 'package:opentripapp/features/trip/domain/entity/trip_spec.dart' as _i5;

import 'trip_repository_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MockTripLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockTripLocalDataSource extends _i1.Mock
    implements _i2.MockTripLocalDataSource {
  MockMockTripLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.TripDto>> getAllTrips() => (super.noSuchMethod(
        Invocation.method(
          #getAllTrips,
          [],
        ),
        returnValue: _i3.Future<List<_i4.TripDto>>.value(<_i4.TripDto>[]),
      ) as _i3.Future<List<_i4.TripDto>>);
}

/// A class which mocks [MockTripMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockTripMapper extends _i1.Mock implements _i2.MockTripMapper {
  MockMockTripMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.TripSpec> convertDtoToTripSpec(List<_i4.TripDto>? trips) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertDtoToTripSpec,
          [trips],
        ),
        returnValue: <_i5.TripSpec>[],
      ) as List<_i5.TripSpec>);
}
